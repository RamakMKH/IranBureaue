# ============================================
# News Management System v2.0
# Environment Configuration Template
# ============================================

# Copy this file to .env and fill in your actual values
# cp .env.example .env

# ============================================
# Application Settings
# ============================================

APP_NAME="News Management System"
DEBUG=False

# ============================================
# Database Configuration
# ============================================

# SQLite (Default - for development)
DATABASE_URL=sqlite:///news.db

# PostgreSQL (Recommended for production)
# DATABASE_URL=postgresql://user:password@localhost:5432/newsdb

# MySQL (Alternative)
# DATABASE_URL=mysql://user:password@localhost:3306/newsdb

# ============================================
# Security (CRITICAL: Change these!)
# ============================================

# Secret key for session encryption (MUST be 32+ characters)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-super-secret-key-minimum-32-characters-please-change-this-in-production

# Admin username
ADMIN_USERNAME=admin

# Admin password hash (NEVER store plain password!)
# Generate with: python setup.py (option 1)
# Or: python -c "from passlib.context import CryptContext; print(CryptContext(schemes=['bcrypt']).hash('your_password'))"
ADMIN_PASSWORD_HASH=$2b$12$example.hash.here.replace.with.actual.bcrypt.hash

# Session expiry time (in hours)
SESSION_EXPIRE_HOURS=24

# ============================================
# API Keys
# ============================================

# Webz.io API Keys (comma-separated for rotation)
# Get your keys from: https://webz.io/
WEBZ_API_KEYS=your-webz-api-key-1,your-webz-api-key-2,your-webz-api-key-3

# Gemini AI API Keys (comma-separated, optional but recommended)
# Get your keys from: https://makersuite.google.com/app/apikey
GEMINI_API_KEYS=your-gemini-api-key-1,your-gemini-api-key-2

# ============================================
# Telegram Configuration
# ============================================

# Telegram Bot Token
# Create bot with @BotFather on Telegram
TELEGRAM_BOT_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz

# Telegram Channel ID or Username
# For channel: @channel_username
# For group: -100123456789
TELEGRAM_CHANNEL=@IranBureau

# ============================================
# Proxy Configuration (Optional)
# ============================================

# SOCKS5 Proxy (if you need to bypass restrictions)
# Format: socks5://host:port
# Leave empty to disable proxy
SOCKS5_PROXY=

# Example:
# SOCKS5_PROXY=socks5://127.0.0.1:1080

# ============================================
# Crawler Settings
# ============================================

# How often to run automatic crawler (in hours)
CRAWLER_INTERVAL_HOURS=1

# Maximum pages to crawl per request
CRAWLER_MAX_PAGES=5

# Maximum results per crawl
CRAWLER_MAX_RESULTS=100

# Request timeout (seconds)
CRAWLER_TIMEOUT=30

# Default language for crawler
CRAWLER_DEFAULT_LANGUAGE=english

# ============================================
# Translation Settings
# ============================================

# Maximum text length for translation
MAX_TRANSLATION_LENGTH=15000

# Translation timeout (seconds)
TRANSLATION_TIMEOUT=30

# ============================================
# Publisher Settings
# ============================================

# How often to run automatic publisher (in minutes)
PUBLISHER_INTERVAL_MINUTES=30

# ============================================
# Logging Configuration
# ============================================

# Log file path
LOG_FILE=webz.log

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ============================================
# Server Configuration
# ============================================

# Server host
SERVER_HOST=0.0.0.0

# Server port (2053 for dsh.kaliroot.cf)
SERVER_PORT=2053

# SSL Certificate paths (optional, for HTTPS)
SSL_KEYFILE=/etc/letsencrypt/live/dsh.kaliroot.cf/privkey.pem
SSL_CERTFILE=/etc/letsencrypt/live/dsh.kaliroot.cf/fullchain.pem

# ============================================
# Redis Configuration (Optional, for production)
# ============================================

# Redis URL for session storage and caching
# Leave empty to use in-memory storage
# REDIS_URL=redis://localhost:6379/0

# ============================================
# Email Notifications (Optional, future feature)
# ============================================

# SMTP settings for email alerts
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# ALERT_EMAIL=admin@example.com

# ============================================
# Advanced Settings (Usually don't need to change)
# ============================================

# Rate limiting (requests per minute)
# RATE_LIMIT=60

# Maximum upload file size (MB)
# MAX_UPLOAD_SIZE=10

# Enable API documentation
# ENABLE_DOCS=True

# CORS allowed origins (comma-separated)
# CORS_ORIGINS=http://localhost:3000,https://yourdomain.com

# ============================================
# Development Settings
# ============================================

# Enable development mode (hot reload, detailed errors)
# WARNING: Never enable in production!
# DEV_MODE=False

# ============================================
# Backup Settings (Optional)
# ============================================

# Automatic database backup (daily at 3 AM)
# AUTO_BACKUP=True
# BACKUP_DIR=/var/backups/news-system
# BACKUP_RETENTION_DAYS=30

# ============================================
# Notes
# ============================================

# 1. Always use strong, unique passwords
# 2. Never commit .env file to git (it's in .gitignore)
# 3. Keep SECRET_KEY and API keys secure
# 4. Use HTTPS in production (configure SSL certificates)
# 5. Regularly rotate API keys
# 6. Monitor log files for security issues
# 7. Backup database regularly

# ============================================
# Quick Setup Guide
# ============================================

# 1. Copy this file:
#    cp .env.example .env

# 2. Generate secret key:
#    python -c "import secrets; print(secrets.token_urlsafe(32))"

# 3. Generate password hash:
#    python setup.py

# 4. Get API keys:
#    - Webz.io: https://webz.io/
#    - Gemini: https://makersuite.google.com/

# 5. Create Telegram bot:
#    - Message @BotFather on Telegram
#    - Use /newbot command
#    - Copy the token

# 6. Test configuration:
#    python setup.py (option 4)

# 7. Run the application:
#    python app/main.py

# ============================================
# Support
# ============================================

# For help and documentation:
# - README.md
# - MIGRATION.md
# - GitHub Issues: https://github.com/YourUsername/IranBureau

# ============================================
# License: MIT
# ============================================