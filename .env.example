# ============================================
# Environment Configuration Template
# Copy this file to .env and fill in your values
# ============================================

# ============================================
# APPLICATION SETTINGS
# ============================================
APP_NAME="News Management System"
DEBUG=false

# ============================================
# SERVER CONFIGURATION
# ============================================
# Host to bind the application (0.0.0.0 for all interfaces)
APP_HOST=0.0.0.0

# Port to run the application
APP_PORT=8000

# Enable HTTPS (true/false)
USE_HTTPS=false

# ============================================
# SSL CONFIGURATION (Required if USE_HTTPS=true)
# ============================================
# Path to SSL certificate file
SSL_CERT_PATH=/path/to/your/fullchain.pem

# Path to SSL private key file
SSL_KEY_PATH=/path/to/your/privkey.pem

# ============================================
# SECURITY SETTINGS
# ============================================
# Secret path for admin panel (randomize this!)
# Use only alphanumeric characters, dashes, and underscores
# Example: admin, dashboard, panel-x7k9, my_secret_admin_2024
SECRET_PATH=admin

# Secret key for session encryption (MUST be 32+ characters)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-secret-key-here-minimum-32-characters

# Admin username for login
ADMIN_USERNAME=admin

# Hashed admin password (DO NOT put plain password here!)
# Generate with: python setup.py (option 1)
ADMIN_PASSWORD_HASH=$2b$12$your.hashed.password.here

# Session expiration in hours
SESSION_EXPIRE_HOURS=24

# ============================================
# DATABASE CONFIGURATION
# ============================================
# SQLite (Development)
DATABASE_URL=sqlite:///news.db

# PostgreSQL (Production - Recommended)
# DATABASE_URL=postgresql://username:password@localhost:5432/newsdb

# ============================================
# API KEYS
# ============================================
# Webz.io API keys (comma-separated for rotation)
WEBZ_API_KEYS=key1,key2,key3

# Gemini AI API keys (comma-separated for rotation)
# Optional - used for AI translation
GEMINI_API_KEYS=key1,key2

# ============================================
# TELEGRAM CONFIGURATION
# ============================================
# Telegram bot token
# Get from @BotFather on Telegram
TELEGRAM_BOT_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz

# Telegram channel username or ID
# Examples: @YourChannel or -1001234567890
TELEGRAM_CHANNEL=@YourChannel

# ============================================
# PROXY CONFIGURATION (Optional)
# ============================================
# SOCKS5 proxy for API requests
# Leave empty if not needed
# Format: socks5://username:password@host:port
SOCKS5_PROXY=

# ============================================
# CRAWLER SETTINGS
# ============================================
# Default language for news crawling
CRAWLER_DEFAULT_LANGUAGE=english

# Maximum pages to crawl per request
CRAWLER_MAX_PAGES=5

# Maximum results per crawl
CRAWLER_MAX_RESULTS=100

# Crawler timeout in seconds
CRAWLER_TIMEOUT=30

# ============================================
# TRANSLATION SETTINGS
# ============================================
# Maximum text length for translation (characters)
MAX_TRANSLATION_LENGTH=15000

# Translation timeout in seconds
TRANSLATION_TIMEOUT=30

# ============================================
# SCHEDULER SETTINGS
# ============================================
# Crawler interval in hours
CRAWLER_INTERVAL_HOURS=1

# Publisher interval in minutes
PUBLISHER_INTERVAL_MINUTES=30

# ============================================
# LOGGING SETTINGS
# ============================================
# Log file path
LOG_FILE=webz.log

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# ============================================
# NOTES
# ============================================
# 1. Never commit .env file to git
# 2. Keep SECRET_KEY secure and unique
# 3. Use strong, unique SECRET_PATH
# 4. Generate password hash, never use plain text
# 5. Rotate API keys regularly
# 6. Use PostgreSQL in production
# 7. Enable HTTPS in production
# 8. Keep this file updated with your actual values
# ============================================
